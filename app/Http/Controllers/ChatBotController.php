<?php

namespace App\Http\Controllers;

use Illuminate\Http\Request;
use App\Models\Artist;
use App\Models\Faq;
use Illuminate\Support\Facades\Auth;

class ChatbotController extends Controller
{
    private $userName = null;
    private $temporaryData = [];
    
    public function respond(Request $request)
    {
        $message = strtolower(trim($request->input('message')));
        $sessionId = $request->session()->getId();
        
        if ($this->isInConversationFlow($sessionId)) {
            return $this->handleConversationFlow($sessionId, $message);
        }
        
        $response = $this->generateResponse($message, $sessionId);
        
        return response()->json(['response' => $response]);
    }
    
    protected function generateResponse($message, $sessionId)
    {
        // Saludos y captura de nombre
        if ($this->matchesAny($message, ['hola', 'buenos d√≠as', 'buenas tardes', 'hi', 'hello'])) {
            if (!$this->userName) {
                $this->setTemporaryData($sessionId, 'awaiting_name', true);
                return '¬°Hola! Soy tu asistente del estudio de tatuajes. ¬øEn qu√© puedo ayudarte hoy?';
            }
            return "¬°Hola {$this->userName}! ¬øEn qu√© puedo ayudarte hoy?";
        }
        
        if ($this->getTemporaryData($sessionId, 'awaiting_name')) {
            $this->userName = ucwords(trim($message));
            $this->setTemporaryData($sessionId, 'awaiting_name', false);
            return "Mucho gusto {$this->userName}. ¬øQu√© informaci√≥n necesitas hoy? Puedo ayudarte con:\n"
                . "üîπ Reservas y citas\n"
                . "üîπ Cuidados del tatuaje\n"
                . "üîπ Artistas y estilos\n"
                . "üîπ Dise√±os personalizados\n"
                . "üîπ Precios y promociones";
        }
        
        // Funcionalidades principales
        if ($this->matchesAny($message, ['reserva', 'agendar', 'cita', 'turno', 'hacer una cita'])) {
            return $this->handleAppointmentRequest($sessionId);
        }
        
        if ($this->matchesAny($message, ['artista', 'especialidad', 'dise√±ador', 'qui√©n hace', 'especialista'])) {
            return $this->handleArtistInquiry($sessionId);
        }
        
        if ($this->matchesAny($message, ['precio', 'costo', 'cu√°nto cuesta', 'presupuesto', 'a cuanto'])) {
            return $this->handlePricingInquiry($message);
        }
        
        if ($this->matchesAny($message, ['cuidados', 'cuidar', 'despu√©s del tatuaje', 'post tattoo'])) {
            return $this->handleAftercareInstructions($message);
        }
        
        // Informaci√≥n adicional
        if ($this->matchesAny($message, ['riesgo', 'peligro', 'infecci√≥n', 'alergia', 'complicaci√≥n'])) {
            return $this->handleHealthRisksInfo($message);
        }
        
        if ($this->matchesAny($message, ['curaci√≥n', 'tiempo de cura', 'sanar', 'cicatrizar'])) {
            return $this->handleHealingProcessInfo();
        }
        
        if ($this->matchesAny($message, ['dise√±o', 'idea', 'motivo', 'qu√© tatuarme'])) {
            return $this->handleDesignAdvice($message);
        }
        
        if ($this->matchesAny($message, ['horario', 'ubicaci√≥n', 'direcci√≥n', 'contacto'])) {
            return $this->handleStudioInfo();
        }
        
        if ($this->matchesAny($message, ['m√°quina', 'agujas', 'tinta', 'materiales'])) {
            return $this->handleTechnicalQuestions($message);
        }
        
        if ($this->matchesAny($message, ['cubrir', 'cover up', 'tatuaje viejo'])) {
            return $this->handleCoverUpInfo();
        }
        
        if ($this->matchesAny($message, ['temporal', 'henna', 'fake tattoo'])) {
            return $this->handleTemporaryTattoos();
        }
        
        // Despedidas
        if ($this->matchesAny($message, ['gracias', 'agradecido', 'thanks'])) {
            return $this->generateThankYouResponse();
        }
        
        if ($this->matchesAny($message, ['adi√≥s', 'chao', 'hasta luego', 'bye'])) {
            return $this->generateGoodbyeMessage();
        }
        
        // B√∫squeda en FAQs
        $faqMatch = Faq::where('question', 'like', "%{$message}%")->first();
        if ($faqMatch) {
            return $faqMatch->answer;
        }
        
        // Respuesta por defecto
        return $this->handleUnknownQuestion($message);
    }
    
    // ========== M√âTODOS DE MANEJO ==========
    
    private function handleAppointmentRequest($sessionId)
    {
        $this->setTemporaryData($sessionId, 'reserva_flow', true);
        return "Perfecto {$this->userName}, vamos a agendar tu cita. ¬øPrefieres:\n"
            . "1Ô∏è‚É£ Tatuaje personalizado (necesitamos dise√±arlo)\n"
            . "2Ô∏è‚É£ Tatuaje de cat√°logo\n"
            . "3Ô∏è‚É£ Piercing o body modification\n"
            . "4Ô∏è‚É£ Solo quiero informaci√≥n";
    }
    
    private function handleArtistInquiry($sessionId)
    {
        $this->setTemporaryData($sessionId, 'artist_flow', true);
        return "Tenemos especialistas en diferentes estilos:\n"
            . "‚úèÔ∏è Tradicional/Americano\n"
            . "üé® Realismo/Retratos\n"
            . "‚ö´ Black & Grey\n"
            . "üíÆ Japon√©s\n"
            . "üî† Lettering/Caligraf√≠a\n"
            . "üíâ Minimalista/Fino\n"
            . "üåø Dotwork/Geom√©trico\n"
            . "¬øQu√© estilo te interesa?";
    }
    
    private function handlePricingInquiry($message)
    {
        if ($this->matchesAny($message, ['peque√±o', 'chico', 'simple'])) {
            return "Para tatuajes peque√±os (hasta 10cm):\n"
                . "üíµ Desde \$50 - \$150\n"
                . "‚è±Ô∏è 30-60 minutos\n"
                . "Incluye dise√±o simple y una sesi√≥n";
        } elseif ($this->matchesAny($message, ['mediano', 'normal'])) {
            return "Tatuajes medianos (10-20cm):\n"
                . "üíµ \$150 - \$400\n"
                . "‚è±Ô∏è 1-3 horas\n"
                . "Puede requerir 1-2 sesiones";
        } elseif ($this->matchesAny($message, ['grande', 'complejo', 'manga'])) {
            return "Tatuajes grandes/complejos:\n"
                . "üíµ \$400 - \$2000+\n"
                . "‚è±Ô∏è M√∫ltiples sesiones\n"
                . "Precio var√≠a por dise√±o y artista";
        } else {
            return "Los precios dependen de:\n"
                . "üìè Tama√±o del dise√±o\n"
                . "üé® Complejidad y detalles\n"
                . "üë®‚Äçüé® Artista seleccionado\n"
                . "üí™ Parte del cuerpo\n"
                . "\nEjemplos:\n"
                . "‚Ä¢ Letra peque√±a: \$50-\$80\n"
                . "‚Ä¢ S√≠mbolo 5cm: \$80-\$120\n"
                . "‚Ä¢ Manga completa: \$1000+\n"
                . "\n¬øQuieres cotizar algo espec√≠fico?";
        }
    }
    
    private function handleAftercareInstructions($message)
    {
        if ($this->matchesAny($message, ['primeros d√≠as', 'inicio'])) {
            return "Primeros 3 d√≠as:\n"
                . "1Ô∏è‚É£ Retira el vendaje despu√©s de 2-3 horas\n"
                . "2Ô∏è‚É£ Lava suavemente con agua tibia y jab√≥n neutro\n"
                . "3Ô∏è‚É£ Seca con toques (no frotes)\n"
                . "4Ô∏è‚É£ Aplica crema recomendada (capa fina)\n"
                . "5Ô∏è‚É£ Repite 2-3 veces al d√≠a";
        } elseif ($this->matchesAny($message, ['costra', 'picaz√≥n'])) {
            return "Fase de costras (d√≠as 4-14):\n"
                . "‚Ä¢ Es normal que se forme costra y pique\n"
                . "‚Ä¢ NO RASQUES aunque pique mucho\n"
                . "‚Ä¢ Sigue hidratando con crema\n"
                . "‚Ä¢ Evita ropa ajustada en la zona";
        } else {
            return "Cuidados esenciales:\n"
                . "üßº Higiene: Lava 2-3 veces/d√≠a\n"
                . "üíß Hidrataci√≥n: Crema especializada\n"
                . "üëï Ropa: Holgada y de algod√≥n\n"
                . "üö´ Evita: Sol, cloro, rascar\n"
                . "‚è≥ Curaci√≥n completa: 4 semanas";
        }
    }
    
    private function handleHealthRisksInfo($message)
    {
        if ($this->matchesAny($message, ['infecci√≥n', 'pus'])) {
            return "Signos de infecci√≥n:\n"
                . "üî¥ Enrojecimiento extremo\n"
                . "üî• Calor localizado\n"
                . "üíâ Secreci√≥n amarilla/verde\n"
                . "\nSi notas esto:\n"
                . "1. Limpia con agua y jab√≥n\n"
                . "2. Aplica antis√©ptico\n"
                . "3. Consulta a un m√©dico";
        } elseif ($this->matchesAny($message, ['alergia', 'reacci√≥n'])) {
            return "Reacciones al√©rgicas:\n"
                . "‚Ä¢ Raras (usamos tintas hipoalerg√©nicas)\n"
                . "‚Ä¢ Pueden aparecer hasta 72h despu√©s\n"
                . "‚Ä¢ S√≠ntomas: Picaz√≥n extrema, hinchaz√≥n";
        } else {
            return "Riesgos potenciales:\n"
                . "ü¶† Infecci√≥n (si no se cuida bien)\n"
                . "ü§ß Reacci√≥n al√©rgica (raro)\n"
                . "„Ä∞ Cicatrizaci√≥n irregular\n"
                . "\nPrevenci√≥n:\n"
                . "‚Ä¢ Estudio profesional\n"
                . "‚Ä¢ Materiales esterilizados";
        }
    }
    
    private function handleHealingProcessInfo()
    {
        return "Proceso de curaci√≥n:\n"
            . "1Ô∏è‚É£ Primeros 3 d√≠as: Sensibilidad\n"
            . "2Ô∏è‚É£ D√≠as 4-14: Descamaci√≥n\n"
            . "3Ô∏è‚É£ Semanas 2-4: Piel renovada\n"
            . "4Ô∏è‚É£ Mes 1-2: Colores asentados\n"
            . "\n¬øNecesitas detalles sobre alguna etapa?";
    }
    
    private function handleDesignAdvice($message)
    {
        if ($this->matchesAny($message, ['peque√±o', 'minimalista'])) {
            return "Para tatuajes peque√±os:\n"
                . "‚Ä¢ Ubicaciones: Mu√±eca, oreja, costillas\n"
                . "‚Ä¢ Dise√±os: S√≠mbolos finos, letras\n"
                . "‚Ä¢ Tama√±o ideal: 3-8 cm\n"
                . "\n¬øTienes alguna idea en mente?";
        }

        return "Para elegir tu dise√±o:\n"
            . "1. Piensa en el **significado**\n"
            . "2. Elige un **estilo**\n"
            . "3. Decide la **ubicaci√≥n**\n"
            . "4. Considera el **tama√±o**\n"
            . "\n¬øQuieres ver algunos dise√±os populares?";
    }
    
    private function handleStudioInfo()
    {
        return "Informaci√≥n del estudio:\n"
            . "üìç Direcci√≥n: Calle del Tatuaje 123\n"
            . "üïí Horarios: L-V 11am-8pm, S 10am-6pm\n"
            . "üìû Tel√©fono: 000000000\n"
            . "üìß Email: hignacio@gmail.com\n"
            . "Instagram: @InkMasterOficial\n"
            . "\n¬øNecesitas ayuda con direcciones?";
    }
    
    private function handleTechnicalQuestions($message)
    {
        if ($this->matchesAny($message, ['tinta', 'pigmentos'])) {
            return "Nuestras tintas:\n"
                . "‚Ä¢ Hipoalerg√©nicas\n"
                . "‚Ä¢ Veganas\n"
                . "‚Ä¢ Certificadas\n"
                . "‚Ä¢ Colores vibrantes";
        }

        return "Equipo t√©cnico:\n"
            . "üîπ M√°quinas rotativas\n"
            . "üîπ Agujas est√©riles\n"
            . "üîπ Esterilizaci√≥n hospitalaria\n"
            . "\n¬øQu√© aspecto te interesa?";
    }
    
    private function handleCoverUpInfo()
    {
        return "Cover-ups:\n"
            . "‚úÖ Se puede cubrir la mayor√≠a\n"
            . "üîÑ Evaluamos tu tatuaje actual\n"
            . "üé® Opciones:\n"
            . "   - Dise√±o nuevo\n"
            . "   - Aclarado l√°ser\n"
            . "   - Modificaci√≥n\n"
            . "\n¬øQu√© tatuaje quieres cubrir?";
    }
    
    private function handleTemporaryTattoos()
    {
        return "Opciones no permanentes:\n"
            . "üåø Henna natural (1-3 semanas)\n"
            . "‚ú® Tatuajes temporales (7 d√≠as)\n"
            . "üé® Prueba de dise√±o\n"
            . "\n¬øTe interesa alguna?";
    }
    
    private function generateThankYouResponse()
    {
        $responses = [
            "¬°De nada {$this->userName}! Estamos para servirte.",
            "Fue un placer ayudarte. ¬°Vuelve cuando quieras!",
            "Gracias a ti. ¬øNecesitas algo m√°s?"
        ];
        return $responses[array_rand($responses)];
    }
    
    private function generateGoodbyeMessage()
    {
        $greetings = [
            "¬°Hasta luego {$this->userName}! Esperamos verte pronto.",
            "Nos vemos, {$this->userName}. Recuerda los cuidados.",
            "Que tengas un excelente d√≠a, {$this->userName}."
        ];
        return $greetings[array_rand($greetings)];
    }
    
    private function handleUnknownQuestion($message)
    {
        return "Lo siento, no entend√≠ completamente tu pregunta. ¬øPodr√≠as reformularla?\n"
            . "Puedo ayudarte con informaci√≥n sobre:\n"
            . "‚Ä¢ Reservas y citas\n"
            . "‚Ä¢ Cuidados del tatuaje\n"
            . "‚Ä¢ Artistas y estilos\n"
            . "‚Ä¢ Precios y promociones";
    }
    
    // ========== M√âTODOS AUXILIARES ==========
    
    private function isInConversationFlow($sessionId)
    {
        return isset($this->temporaryData[$sessionId]) && 
              (isset($this->temporaryData[$sessionId]['reserva_flow']) || 
               isset($this->temporaryData[$sessionId]['artist_flow']));
    }
    
    private function handleConversationFlow($sessionId, $message)
    {
        if ($this->getTemporaryData($sessionId, 'reserva_flow')) {
            return $this->handleAppointmentFlow($sessionId, $message);
        }
        
        if ($this->getTemporaryData($sessionId, 'artist_flow')) {
            return $this->handleArtistFlow($sessionId, $message);
        }
        
        return "Respuesta de flujo conversacional";
    }
    
    private function handleAppointmentFlow($sessionId, $message)
    {
        // L√≥gica para completar reserva
        $this->setTemporaryData($sessionId, 'reserva_flow', false);
        return "Gracias por la informaci√≥n. Hemos registrado tu preferencia y pronto nos contactaremos contigo.";
    }
    
    private function handleArtistFlow($sessionId, $message)
    {
        // L√≥gica para recomendar artistas
        $this->setTemporaryData($sessionId, 'artist_flow', false);
        return "Para el estilo que mencionas, te recomendar√≠a a nuestros artistas:\n"
            . "‚Ä¢ Juan P√©rez - Especialista en el estilo\n"
            . "‚Ä¢ Mar√≠a G√≥mez - Excelente para dise√±os personalizados\n"
            . "\n¬øQuieres ver sus portafolios o agendar con alguno?";
    }
    
    private function setTemporaryData($sessionId, $key, $value)
    {
        $this->temporaryData[$sessionId][$key] = $value;
    }
    
    private function getTemporaryData($sessionId, $key)
    {
        return $this->temporaryData[$sessionId][$key] ?? null;
    }
    
    private function matchesAny($message, array $keywords)
    {
        foreach ($keywords as $keyword) {
            if (str_contains($message, $keyword)) {
                return true;
            }
        }
        return false;
    }
    
    private function buildResponse($mainText, $context, $suggestions = [])
    {
        $response = $mainText;
        
        if (!empty($suggestions)) {
            $response .= "\n\nTambi√©n podr√≠as preguntar:\n";
            foreach ($suggestions as $suggestion) {
                $response .= "‚Ä¢ {$suggestion}\n";
            }
        }
        
        return $response;
    }
}